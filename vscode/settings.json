{
  "editor.fontFamily": "FiraCode Nerd Font",
  "terminal.integrated.fontFamily": "FiraCode Nerd Font",
  "editor.rulers": [100],
  "editor.minimap.enabled": false,
  "editor.fontLigatures": true,
  "editor.fontSize": 14,
  "editor.lineHeight": 25,
  "editor.smoothScrolling": true,
  "editor.detectIndentation": true,
  "editor.tabSize": 2,
  "editor.renderWhitespace": "boundary",
  "window.zoomLevel": 0,
  "emmet.includeLanguages": {
    "vue-html": "html"
  },
  "emmet.triggerExpansionOnTab": true,
  "tailwindCSS.includeLanguages": {
    "plainText": "typescriptreact"
  },
  "eslint.validate": ["javascript", "javascriptreact", "html", "typescriptreact"],
  "sassFormat.indent": 2,
  "javascript.validate.enable": true,
  "workbench.colorTheme": "Community Material Theme Lighter High Contrast",
  "explorer.confirmDragAndDrop": false,
  "explorer.openEditors.visible": 0,
  "tslint.jsEnable": false,
  "javascript.implicitProjectConfig.experimentalDecorators": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "search.exclude": {
    "**/bower_components": false,
    "**/node_modules": false
  },
  "prettier.printWidth": 100,
  "prettier.semi": false,
  "prettier.singleQuote": true,
  "prettier.trailingComma": "all",
  "workbench.startupEditor": "newUntitledFile",
  "workbench.colorCustomizations": {},
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.iconTheme": "vscode-icons",
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "editor.gotoLocation.multipleDeclarations": "goto",
  "editor.gotoLocation.multipleDefinitions": "goto",
  "editor.gotoLocation.multipleImplementations": "goto",
  "editor.gotoLocation.multipleReferences": "goto",
  "editor.gotoLocation.multipleTypeDefinitions": "goto",
  "editor.lineNumbers": "relative",
  "vim.easymotionMarkerBackgroundColor": "#111111",
  "vim.easymotionMarkerForegroundColorOneChar": "#eeeeee",
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "command": "whichkey.triggerKey",
          "args": "m"
        }
      ]
    }
  ],
  "vim.visualModeKeyBindings": [],
  "vim.normalModeKeyBindings": [],
  "vim.insertModeKeyBindings": [
    {
      "before": ["k", "j"],
      "after": ["<Esc>"]
    }
  ],
  "vspacecode.bindingOverrides": [
    // Major mode: Clojure
    {
      "keys": ["m", "languageId:clojure"],
      "name": "Major...",
      "type": "conditional",
      "bindings": [
        {
          "key": "=",
          "name": "Format...",
          "type": "bindings",
          "bindings": [
            {
              "key": "=",
              "name": "Format document",
              "type": "command",
              "command": "editor.action.formatDocument"
            },
            {
              "key": "k",
              "name": "Lisp Mode...",
              "type": "bindings",
              "bindings": [
                {
                  "key": "b",
                  "name": "forward barf",
                  "type": "command",
                  "command": "paredit.barfSexpForward"
                },
                {
                  "key": "B",
                  "name": "backward barf",
                  "type": "command",
                  "command": "paredit.barfSexpBackward"
                },
                {
                  "key": "s",
                  "name": "forward slurp",
                  "type": "command",
                  "command": "paredit.slurpSexpForward"
                },
                {
                  "key": "S",
                  "name": "backward slurp",
                  "type": "command",
                  "command": "paredit.slurpSexpBackward"
                }
              ]
            },
            {
              "key": "t",
              "name": "Tests...",
              "type": "bindings",
              "bindings": [
                {
                  "key": "a",
                  "name": "All tests",
                  "type": "command",
                  "command": "calva.runAllTests"
                },
                {
                  "key": "n",
                  "name": "All tests in namespace",
                  "type": "command",
                  "command": "calva.runNamespaceTests"
                },
                {
                  "key": "r",
                  "name": "Re-run failing tests in namespace",
                  "type": "command",
                  "command": "calva.rerunTests"
                },
                {
                  "key": "t",
                  "name": "Test at point",
                  "type": "command",
                  "command": "calva.runTestUnderCursor"
                }
              ]
            },
            {
              "key": "m",
              "name": "Manage REPLs",
              "type": "bindings",
              "bindings": [
                {
                  "key": "'",
                  "name": "Jack-In or connect",
                  "type": "command",
                  "command": "calva.jackInOrConnect"
                }
              ]
            },
            {
              "key": "e",
              "name": "Evaluate",
              "type": "bindings",
              "bindings": [
                {
                  "key": "b",
                  "name": "Evaluate buffer",
                  "type": "command",
                  "command": "calva.loadFile"
                },
                {
                  "key": ";",
                  "name": "Evaluate sexp",
                  "type": "command",
                  "command": "calva.evaluateCurrentTopLevelForm"
                }
              ]
            },
            {
              "key": "g",
              "name": "Go... (navigate)",
              "type": "bindings",
              "bindings": [
                {
                  "key": "g",
                  "name": "Go to definition",
                  "type": "command",
                  "command": "editor.action.goToDeclaration"
                },
                {
                  "key": "b",
                  "name": "Go back",
                  "type": "command",
                  "command": "workbench.action.navigateBack"
                }
              ]
            },
            {
              "key": "r",
              "name": "Refactoring",
              "type": "bindings",
              "bindings": [
                {
                  "key": "r",
                  "name": "Rename",
                  "type": "command",
                  "command": "editor.action.rename"
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[php]": {
    "editor.defaultFormatter": "bmewburn.vscode-intelephense-client"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "php-cs-fixer.executablePath": "${extensionPath}/php-cs-fixer.phar",
  "php-cs-fixer.lastDownload": 1601283072873,
  "explorer.confirmDelete": false,
  "vim.history": 1000,
  "vim.neovimPath": "/usr/local/bin/nvim",
  "vim.useSystemClipboard": true,
  "calva.prettyPrintingOptions": {
    "enabled": true,
    "printEngine": "pprint",
    "width": 120,
    "maxLength": 50
  },
  "calva.paredit.defaultKeyMap": "strict",
  "files.watcherExclude": {
    "**/.bloop": true,
    "**/.metals": true,
    "**/.ammonite": true,
    "**/target": true
  },
  "python.languageServer": "Pylance",
  "workbench.editorAssociations": [
    {
      "viewType": "jupyter.notebook.ipynb",
      "filenamePattern": "*.ipynb"
    }
  ],
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },
  "window.zoomLevel": 1,
  "vim.easymotion": true,
  "vim.leader": "space"
}
