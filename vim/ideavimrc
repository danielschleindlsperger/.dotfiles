let mapleader=" "

syntax on
set nocompatible
set number relativenumber

" plugins https://github.com/JetBrains/ideavim/wiki/Emulated-plugins
set surround
set commentary
" KJump is a plugin alternative to easymotion
nmap <leader>js :action KJumpAction<cr>
nmap <leader>jw :action KJumpAction.Word0<cr>
nmap <leader>jl :action KJumpAction.Line<cr>

"timeouts for the noremappings
set notimeout
set ttimeout

" kj to exit insert mode (faster than Esc)
inoremap kj <Esc>

" Add semi and esc
noremap <leader>; <Esc>$r;
" Refresh .ideavimrc
noremap <leader>! :source ~/.ideavimrc<CR>

noremap <leader>sa :action FindUsages<CR>
noremap <leader>so :action SelectAllOccurrences<CR>

" Open new terminal tab
noremap <leader>ot :action Terminal.OpenInTerminal<CR> 

" open terminal
noremap <leader>at :action ActivateTerminalToolWindow<CR> 

" hide active window (e.g. terminal)
noremap <leader>hw :action HideActiveWindow<CR> 
noremap <leader>sw :action Switcher<CR> 

" close terminal tab
"CloseActiveTab

" Since kill copies to system clipboard, it's nice to have easy access to clipboard paste
map <leader>p "+p
" Search
nnoremap <leader>/ :action FindInPath<cr>

" Files
nnoremap <leader>fs :action SaveAll<cr>

" Go Places
" gd goes to definition by default
nnoremap <C--> :action Back<cr>
nnoremap gT :action GotoTest<cr>
nnoremap gi :action GotoImplementation<cr>
nnoremap gn :action GotoNextError<cr>
nnoremap gp :action GotoPreviousError<cr>
nnoremap gu :action ShowUsages<cr>
" Move up down in lists
map <C-j> <Action>(EditorDown)
map <C-k> <Action>(EditorUp)

" Git
nnoremap <leader>gC :action Git.ResolveConflicts<cr>
nnoremap <leader>gg :action ActivateVersionControlToolWindow<cr>

" Open
nnoremap <leader>oo :action MoveEditorToOppositeTabGroup<cr>

" Windows (Tabs)

" window delete (close)
nnoremap <leader>wd :action CloseContent<cr>
" window in project view 
nnoremap <leader>wp :action SelectInProjectView<cr> 
nnoremap <C-h> :action PreviousTab<cr>
nnoremap <C-l> :action NextTab<cr>

" Comments
nnoremap <leader>cl :action CommentByLineComment<cr>
" HACK: https://youtrack.jetbrains.com/issue/VIM-862#focus=streamItem-27-1604926.0-0
vnoremap <leader>cl :<bs><bs><bs><bs><bs>action VimVisualSwapSelections<cr>:action CommentByLineComment<cr>

" Refactorings
nnoremap <leader>oi :action OptimizeImports<CR>
nnoremap <leader>rn :action RenameElement<CR>
nnoremap <leader>rf :action RenameFile<CR>
nnoremap <leader>ri :action Inline<CR>
nnoremap <leader>rv :action IntroduceVariable<CR>
nnoremap <leader>rm :action ExtractMethod<CR>
nnoremap <leader>rr :action Refactorings.QuickListPopupAction<CR>
nnoremap <leader>rp :action IntroduceParameter<CR>
nnoremap <leader>im :action ImplementMethods<CR>
nnoremap <leader>om :action OverrideMethods<CR>
nnoremap <leader>rr :action Refactorings.QuickListPopupAction<cr>
nnoremap <leader>rr :action RenameElement<CR>i

" quick fix
nnoremap <leader>qf :action ShowIntentionActions<CR>
" pretty format code
nnoremap <leader>F :action ReformatCode<CR>

" Types
nnoremap <leader>ti :action :cursive.editoractions/show-type<cr>

" Pasting from yank history
nnoremap <leader>y :action PasteMultiple<CR>

""""
"""" Cursive Clojure
""""

" 'evaluate form'
noremap <leader>ef :action :cursive.repl.actions/run-top-sexp<CR>
" 'evaluate buffer'
noremap <leader>eb :action :cursive.repl.actions/load-file<CR>
noremap <leader>r :action :cursive.repl.actions/jump-to-repl<CR>
" 'tests'
noremap <leader>t :action Cursive.Repl.Command.ReplRunTests<CR> 
" 'reload system'
noremap <leader>rs :action Cursive.Repl.Command.IntegrantReset<CR> 

" vim delete and change, with sexps!
map <leader>x :action :cursive.actions.paredit/kill-sexp<CR>
map <leader>d :action :cursive.actions.paredit/kill<CR>
map <leader>c :action :cursive.actions.paredit/kill-sexp<CR>i

" Sexp editing mappings straight from paredit.vim
map <leader>J :action :cursive.actions.paredit/join<CR>
map <leader>O :action :cursive.actions.paredit/split<CR>
map <leader>S :action :cursive.actions.paredit/splice<CR>
map <leader>I :action :cursive.actions.paredit/raise<CR>

" Splice backwards and forwards
map <leader>k :action :cursive.actions.paredit/splice-killing-backwards<CR>
map <leader>j :action :cursive.actions.paredit/splice-killing-forwards<CR>

" Slurp and barf
map <leader>l :action :cursive.actions.paredit/barf-forwards<CR> 
map <leader>h :action :cursive.actions.paredit/slurp-forwards<CR>
map <leader>L :action :cursive.actions.paredit/slurp-backwards<CR>
map <leader>H :action :cursive.actions.paredit/barf-backwards<CR> 

" leader + wrapping symbol for wrapping
map <leader>( :action :cursive.actions.paredit/wrap-paren<CR>
map <leader>[ :action :cursive.actions.paredit/wrap-square<CR>
map <leader>{ :action :cursive.actions.paredit/wrap-curly<CR>
map <leader>" :action :cursive.actions.paredit/wrap-quotes<CR>

" Cycle collection
map <leader>C :action :cursive.actions.paredit/cycle-collection-type<CR>

" Evaluate sexp like in vim-fireplace
map cpp :action :cursive.repl.actions/run-top-sexp<CR>

" Force a single "parinference" when in paredit mode and reformat
map <leader>rp :action :cursive.actions.paredit/toggle<CR>:action :cursive.actions.paredit/toggle<CR>kj:action :cursive.actions.paredit/toggle<CR>:action ReformatCode<CR>
